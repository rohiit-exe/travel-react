[{"D:\\my-travel\\src\\index.js":"1","D:\\my-travel\\src\\reportWebVitals.js":"2","D:\\my-travel\\src\\App.jsx":"3","D:\\my-travel\\src\\Components\\Navbar.jsx":"4","D:\\my-travel\\src\\Components\\pages\\Home.jsx":"5","D:\\my-travel\\src\\Components\\pages\\Services.jsx":"6","D:\\my-travel\\src\\Components\\pages\\Products.jsx":"7","D:\\my-travel\\src\\Components\\pages\\SignUp.jsx":"8","D:\\my-travel\\src\\Components\\Button.jsx":"9","D:\\my-travel\\src\\Components\\Footer.jsx":"10","D:\\my-travel\\src\\Components\\HeroSection.jsx":"11","D:\\my-travel\\src\\Components\\Cards.jsx":"12","D:\\my-travel\\src\\Components\\CardItem.jsx":"13"},{"size":245,"mtime":1625125953641,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":732,"mtime":1625126104203,"results":"17","hashOfConfig":"15"},{"size":2677,"mtime":1617727477622,"results":"18","hashOfConfig":"15"},{"size":308,"mtime":1617167546469,"results":"19","hashOfConfig":"15"},{"size":162,"mtime":1617167561296,"results":"20","hashOfConfig":"15"},{"size":162,"mtime":1617167619484,"results":"21","hashOfConfig":"15"},{"size":158,"mtime":1617167568075,"results":"22","hashOfConfig":"15"},{"size":1136,"mtime":1617425350202,"results":"23","hashOfConfig":"15"},{"size":3808,"mtime":1617167518364,"results":"24","hashOfConfig":"15"},{"size":875,"mtime":1620199452770,"results":"25","hashOfConfig":"15"},{"size":1728,"mtime":1625125479483,"results":"26","hashOfConfig":"15"},{"size":672,"mtime":1619941873740,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ipfn51",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},"D:\\my-travel\\src\\index.js",[],"D:\\my-travel\\src\\reportWebVitals.js",[],["58","59"],"D:\\my-travel\\src\\App.jsx",[],"D:\\my-travel\\src\\Components\\Navbar.jsx",["60"],"import React, {useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport {Button} from './Button';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button,setButton] = useState(true);  \r\n\r\n    const handleClick =()=> setClick(!click);           {/*it changes the state to the other on clicking */}\r\n    const closeMobileMenu =()=> setClick(false);\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960) {                  /*for mobile screen*/\r\n            setButton(false);\r\n        }\r\n            else { setButton(true);\r\n            }\r\n        };\r\n        \r\n        useEffect( () => {                              /* to get rid of sign-up pop up every time we refresh we pass an empty array*/\r\n            showButton();\r\n        }, []);\r\n            \r\n\r\n        window.addEventListener('resize', showButton);\r\n\r\n\r\n    return (\r\n    <>\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\" onClick = {closeMobileMenu}>\r\n                    TRVL <i class=\"fas fa-umbrella-beach\"></i>              {/*logo*/}\r\n                </Link>          \r\n                <div className=\"menu-icon\" onClick={handleClick}>\r\n                    <i className={click ? 'fas fa-times' : 'fas fa-bars'} />    {/*its toggle b/w bars and cross*/}\r\n                </div>     \r\n                <ul className={click ? 'nav-menu active':'nav-menu'} >    {/* it the toggle b/w  bars menu and the disappearance of it when user clicks */}\r\n                <li className='nav-items'>\r\n                    <Link to=\"/\" className='nav-links' onClick={closeMobileMenu}>\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-items'>\r\n                    <Link to=\"/services\" className='nav-links' onClick={closeMobileMenu}>\r\n                        Services\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-items'>\r\n                    <Link to=\"/products\" className='nav-links' onClick={closeMobileMenu}>\r\n                        Products\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-items'>\r\n                    <Link to=\"/sign-up\" className='nav-links' onClick={closeMobileMenu}>\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                </ul>\r\n                {button && <Button buttonStyle ='btn--outline'> SIGN UP </Button>\r\n\r\n                }\r\n            </div>\r\n        </nav>\r\n    </>\r\n    );\r\n\r\n}\r\nexport default Navbar;\r\n\r\n","D:\\my-travel\\src\\Components\\pages\\Home.jsx",[],"D:\\my-travel\\src\\Components\\pages\\Services.jsx",[],"D:\\my-travel\\src\\Components\\pages\\Products.jsx",[],"D:\\my-travel\\src\\Components\\pages\\SignUp.jsx",[],"D:\\my-travel\\src\\Components\\Button.jsx",["61","62","63","64"],"import React from 'react';\r\nimport './Button.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES = ['btn-primary', 'btn-outline'];                                        {/* automatic css classes = btn-primary,btn-outline*/}\r\n\r\nconst SIZES = ['btn-medium', 'btn-large'];\r\n\r\nexport const Button= ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n    /*we gon choose the button style either btn-primary or btn-outline orelse the default is btn-primary as 0 index is given*/\r\n    \r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize :SIZES[0] \r\n    /*we gon choose the button size either btn-medium or btn-large orelse the default is btn-medium as 0 index is given */\r\n    \r\n\r\n    return (\r\n        <Link to=\"/sign-up\"  className = \"btn-mobile\">\r\n            <button\r\n            className={\"btn ${checkButtonStyle}  ${checkButtonSize}\"}\r\n            onClick={onClick}\r\n            type={type}>\r\n               \r\n            {children}\r\n            </button>\r\n\r\n        </Link>\r\n    )\r\n};","D:\\my-travel\\src\\Components\\Footer.jsx",[],"D:\\my-travel\\src\\Components\\HeroSection.jsx",[],"D:\\my-travel\\src\\Components\\Cards.jsx",[],"D:\\my-travel\\src\\Components\\CardItem.jsx",["65"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.image}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":10,"column":57,"nodeType":"72","messageId":"73","endLine":10,"endColumn":109},{"ruleId":"70","severity":1,"message":"74","line":5,"column":87,"nodeType":"72","messageId":"75","endLine":5,"endColumn":141},{"ruleId":"76","severity":1,"message":"77","line":16,"column":11,"nodeType":"78","messageId":"79","endLine":16,"endColumn":27},{"ruleId":"76","severity":1,"message":"80","line":20,"column":11,"nodeType":"78","messageId":"79","endLine":20,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":27,"column":24,"nodeType":"83","messageId":"84","endLine":27,"endColumn":69},{"ruleId":"85","severity":1,"message":"86","line":11,"column":13,"nodeType":"87","endLine":15,"endColumn":15},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Block is redundant.","redundantBlock","no-unused-vars","'checkButtonStyle' is assigned a value but never used.","Identifier","unusedVar","'checkButtonSize' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]